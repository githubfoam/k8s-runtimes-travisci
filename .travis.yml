---
sudo: required
dist: bionic
env:
  global:
  # auto vagrant installation
notifications:
  slack:
    on_failure: always

fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt

fleet_containerd_tasks : &fleet_containerd_tasks
      install:
        - CONTAINERDVERSION="1.4.1"
        - sudo apt-get install -qqy unzip
        - wget https://github.com/containerd/containerd/archive/v$CONTAINERDVERSION.zip
        # - unzip v1.3.4.zip
        - unzip v$CONTAINERDVERSION.zip
        - ls -lai containerd-$CONTAINERDVERSION
        # - ls -lai /etc/containerd/
        # - echo $(/etc/containerd/config.toml)  
        # - sudo cp containerd-$CONTAINERDVERSION/containerd.service /etc/systemd/system/containerd.service
        # - sudo chmod 644 /etc/systemd/system/containerd.service
        # - sudo systemctl start containerd
        # - sudo systemctl status containerd
        # - sudo containerd config default > /etc/containerd/config.toml
        # - echo $(/etc/containerd/config.toml)
        # - go build main.go
        # - sudo ./main
        # - |
        #   sudo sh -c 'cat >/etc/containerd/config.toml <<-EOF
        #     subreaper = true
        #     oom_score = -999
        #
        #     [debug]
        #             level = "debug"
        #
        #     [metrics]
        #             address = "127.0.0.1:1338"
        #
        #     [plugins.linux]
        #             runtime = "runc"
        #             shim_debug = true
        #   EOF'
        # - containerd config default > /etc/containerd/config.toml #The default configuration can be generated via


matrix:
  fast_finish: true
  include:

    #https://cri-o.io
    # - name: "kubernetes with crio runtime Python 3.7 on bionic amd64"
    #   dist: bionic
    #   addons:
    #        snaps:
    #          - name: minikube
    #            confinement: strict
    #            channel: stable
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   <<: *fleet_crio_tasks
    #   after_success:
    #     - deactivate


    #https://containerd.io/docs/getting-started/#starting-containerd
    - name: "kubernetes with containerd runtime Python 3.7 on bionic amd64"
      dist: bionic
      addons:
           snaps:
             - name: minikube
               confinement: strict
               channel: stable
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      <<: *fleet_containerd_tasks
      after_success:
        - deactivate

    #https://github.com/kubernetes/frakti
    # - name: "kubernetes with frakti runtime Python 3.7 on bionic amd64"
    #   dist: bionic
    #   env:
    #     - FORCE_ROOTLESS_INSTALL=1
    #   addons:
    #        snaps:
    #          - name: minikube
    #            confinement: strict
    #            channel: stable
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   <<: *fleet_install_tasks
    #   <<: *fleet_script_tasks
    #   <<: *fleet_frakti_tasks
    #   after_success:
    #     - deactivate
